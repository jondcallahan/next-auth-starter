import { GetServerSideProps } from "next";
import { useRouter } from "next/dist/client/router";
import Head from "next/head";
import Link from "next/link";
import styles from "../styles/Home.module.css";
import { getUserFromCookies } from "../utils/auth/user";

export default function Home({
  user,
}: {
  user?: {
    id: string;
    emailAddress: string;
    emailAddressVerified: boolean;
  };
}) {
  const router = useRouter();

  return (
    <div className="">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link
          rel="icon"
          type="image/svg+xml"
          href='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><text y=".9em" font-size="90">üê∂</text></svg>'
        />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Next.js Auth Starter üîë üè¥‚Äç‚ò†Ô∏è</h1>
        {user && <h2>Welcome back, {user.emailAddress}</h2>}
        {user?.emailAddressVerified === false && (
          <>
            <h2>Please verify your email</h2>
            <button
              onClick={async function () {
                try {
                  const res = await fetch("/api/auth/verify-email", {
                    method: "POST",
                  });
                  if (res.ok) {
                    alert("Verification link sent. Please check your email");
                  } else {
                    alert("Error sending verification link");
                  }
                } catch (error) {
                  console.error("error", error);
                }
              }}
            >
              Send another verification link
            </button>
          </>
        )}

        {!user && (
          <>
            <h3>Register</h3>
            <form
              onSubmit={async (e) => {
                e.preventDefault();

                const res = await fetch("/api/auth/register", {
                  method: "POST",
                  headers: {
                    "content-type": "application/json",
                  },
                  body: JSON.stringify({
                    email: e.currentTarget["email"].value,
                    password: e.currentTarget["password"].value,
                  }),
                });
                router.reload();
              }}
            >
              <label htmlFor="email">
                Email address
                <input type="email" name="email" id="register-email" />
              </label>
              <br />
              <label htmlFor="password">
                Password
                <input type="password" name="password" id="register-password" />
              </label>
              <br />
              <button type="submit">Register</button>
            </form>

            <h3>Sign in</h3>
            <form
              onSubmit={async (e) => {
                e.preventDefault();

                const res = await fetch("/api/auth/authenticate", {
                  method: "POST",
                  headers: {
                    "content-type": "application/json",
                  },
                  body: JSON.stringify({
                    email: e.currentTarget["email"].value,
                    password: e.currentTarget["password"].value,
                  }),
                });
                if (res.ok) {
                  // User signed in
                  router.reload();
                } else {
                  alert("Unknown user or incorrect password");
                }
              }}
            >
              <label htmlFor="email">
                Email address
                <input type="email" name="email" id="email" />
              </label>
              <br />
              <label htmlFor="password">
                Password
                <input type="password" name="password" id="password" />
              </label>
              <br />
              <button type="submit">Sign in</button>
            </form>
          </>
        )}

        {user?.id && (
          <>
            <br />
            <hr style={{ width: "100%" }} />
            <br />
            <h3>Change password</h3>
            <form
              onSubmit={async (e) => {
                e.preventDefault();

                const res = await fetch("/api/auth/change-password", {
                  method: "POST",
                  headers: {
                    "content-type": "application/json",
                  },
                  body: JSON.stringify({
                    oldPassword: e.currentTarget["old-password"].value,
                    newPassword: e.currentTarget["new-password"].value,
                  }),
                });
                router.reload();
              }}
            >
              <label htmlFor="old-password">
                Old password
                <input
                  type="password"
                  name="old-password"
                  id="old-password"
                  autoComplete="current-password"
                />
              </label>
              <br />
              <label htmlFor="new-password">
                New password
                <input
                  type="password"
                  name="new-password"
                  id="new-password"
                  autoComplete="new-password"
                />
              </label>
              <br />
              <button type="submit">Change password</button>
            </form>
            <br />
            <hr style={{ width: "100%" }} />
            <br />
            <button
              onClick={async (e) => {
                const res = await fetch("/api/auth/unauthenticate", {
                  method: "POST",
                  body: null,
                });
                router.reload();
              }}
            >
              Logout
            </button>
            <br />
          </>
        )}
        {!user?.id && (
          <>
            <br />
            <hr style={{ width: "100%" }} />
            <br />
            <h3>Forgot password</h3>
            <form
              onSubmit={async (e) => {
                e.preventDefault();

                const res = await fetch("/api/auth/forgot-password", {
                  method: "POST",
                  headers: {
                    "content-type": "application/json",
                  },
                  body: JSON.stringify({
                    email: e.currentTarget["forgot-password-email"].value,
                  }),
                });
                // router.reload();
              }}
            >
              <label htmlFor="forgot-password-email">
                Email
                <input
                  type="email"
                  name="forgot-password-email"
                  id="forgot-password-email"
                  autoComplete="email"
                />
              </label>
              <br />
              <button type="submit">Forgot password</button>
            </form>
            <br />
          </>
        )}
        <Link href="/test">Test route</Link>

        {user?.id && <Link href="/sessions">List sessions</Link>}
      </main>
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  try {
    const user = await getUserFromCookies(context.req, context.res);
    return {
      props: {
        user,
      }, // will be passed to the page component as props
    };
  } catch (error) {
    return {
      props: {
        user: null,
        error,
      },
    };
  }
};
